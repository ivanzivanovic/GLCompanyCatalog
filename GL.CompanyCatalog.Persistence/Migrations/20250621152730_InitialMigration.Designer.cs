// <auto-generated />
using System;
using GL.CompanyCatalog.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GL.CompanyCatalog.Persistence.Migrations
{
    [DbContext(typeof(GLDbContext))]
    [Migration("20250621152730_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GL.CompanyCatalog.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("a1c4e7b2-42b3-4e5d-b799-3f40b10f6a23"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Technology"
                        },
                        new
                        {
                            CategoryId = new Guid("b2d5f8c3-53c4-4f6e-a89a-4e51c21f7b34"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Aviation"
                        },
                        new
                        {
                            CategoryId = new Guid("c3e6d9d4-64d5-407f-b9ab-5f62d32f8c45"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Beverages"
                        },
                        new
                        {
                            CategoryId = new Guid("d4f7e1e5-75e6-4180-cabc-6a73e43f9d56"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Electronics"
                        },
                        new
                        {
                            CategoryId = new Guid("e5f8e2f6-86f7-4291-dbcd-7b84f54f0e67"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Automotive"
                        });
                });

            modelBuilder.Entity("GL.CompanyCatalog.Domain.Entities.Company", b =>
                {
                    b.Property<Guid>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Exchange")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Isin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Ticker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompanyId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            CompanyId = new Guid("ee272f8b-6096-4cb6-8625-bb4bb2d89e8b"),
                            CategoryId = new Guid("a1c4e7b2-42b3-4e5d-b799-3f40b10f6a23"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Exchange = "NASDAQ",
                            ImageUrl = "https://logo.clearbit.com/apple.com",
                            Isin = "US0378331005",
                            Name = "Apple Inc.",
                            Ticker = "AAPL",
                            Website = "http://www.apple.com"
                        },
                        new
                        {
                            CompanyId = new Guid("3448d5a4-0f72-4dd7-bf15-c14a46b26c00"),
                            CategoryId = new Guid("b2d5f8c3-53c4-4f6e-a89a-4e51c21f7b34"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Exchange = "Pink sheets",
                            ImageUrl = "https://logo.clearbit.com/britishairways.com",
                            Isin = "US1104193065",
                            Name = "British Airways Plc",
                            Ticker = "BAIRY",
                            Website = "https://www.britishairways.com"
                        },
                        new
                        {
                            CompanyId = new Guid("b419a7ca-3321-4f38-be8e-4d7b6a529319"),
                            CategoryId = new Guid("c3e6d9d4-64d5-407f-b9ab-5f62d32f8c45"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Exchange = "Euronext Amsterdam",
                            ImageUrl = "https://logo.clearbit.com/theheinekencompany.com",
                            Isin = "NL0000009165",
                            Name = "Heineken NV",
                            Ticker = "HEIA",
                            Website = "https://www.theheinekencompany.com"
                        },
                        new
                        {
                            CompanyId = new Guid("62787623-4c52-43fe-b0c9-b7044fb5929b"),
                            CategoryId = new Guid("d4f7e1e5-75e6-4180-cabc-6a73e43f9d56"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Exchange = "Tokyo Stock Exchange",
                            ImageUrl = "https://logo.clearbit.com/panasonic.com",
                            Isin = "JP3866800000",
                            Name = "Panasonic Corp",
                            Ticker = "6752",
                            Website = "http://www.panasonic.co.jp"
                        },
                        new
                        {
                            CompanyId = new Guid("adc42c09-08c1-4d2c-9f96-2d15bb1af299"),
                            CategoryId = new Guid("e5f8e2f6-86f7-4291-dbcd-7b84f54f0e67"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Exchange = "Deutsche Börse",
                            ImageUrl = "https://logo.clearbit.com/porsche.com",
                            Isin = "DE000PAH0038",
                            Name = "Porsche Automobil",
                            Ticker = "PAH3",
                            Website = "https://www.porsche.com/"
                        });
                });

            modelBuilder.Entity("GL.CompanyCatalog.Domain.Entities.Company", b =>
                {
                    b.HasOne("GL.CompanyCatalog.Domain.Entities.Category", "Category")
                        .WithMany("Companies")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("GL.CompanyCatalog.Domain.Entities.Category", b =>
                {
                    b.Navigation("Companies");
                });
#pragma warning restore 612, 618
        }
    }
}
